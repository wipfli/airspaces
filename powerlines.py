import overpy
import json
import time
import glob

api = overpy.Overpass()

path = 'powerlines/'

required = list(range(-180, 180))

def download():
    for i in required:
        tic = time.time()

        print(i)
        
        if path + str(i) + '.geojson' in glob.glob(path + '*.geojson'):
            print('already present...')
            continue
        
        result = api.query('''/*
        This has been generated by the overpass-turbo wizard.
        The original search was:
        “power=line”
        */
        [out:json][timeout:60];
        // gather results
        (
        // query part for: “power=line”
        way["power"="line"](-89,%i,89,%i);
        way["power"="minor_line"](-89,%i,89,%i);
        );
        // print results
        out body;
        >;
        out skel qt;''' % (i, i + 1, i, i + 1))

        duration = time.time() - tic
        print('Got %i features in %1.1f s' % (len(result.ways), duration))

        features = []
        for way in result.ways:
            properties = {
                'power': str(way.tags.get('power')),
                'voltage': str(way.tags.get('voltage'))
            }
            coordinates = [[float(node.lon), float(node.lat)] for node in way.nodes]
            feature = {
                'type': 'Feature',
                'properties': properties,
                'geometry': {
                    'type': 'LineString',
                    'coordinates': coordinates
                },
                'id': 'way/' + str(way.id)
            }
            features += [feature]

        geojson = {
            'type': 'FeatureCollection',
            'features': features
        }

        with open(path + '%i.geojson' % i, 'w') as f:
            json.dump(geojson, f)
        
        print('start sleep...')
        time.sleep(2 * duration)
        print('continue...')
    
def get_unique_features():
    features = []
    for i in required:
        print('reading %i...' % i)
        with open(path + '%i.geojson' % i) as f:
            features += json.load(f)['features']
            
    unique_features = list({f['id']: f for f in features}.values())
    
    return unique_features

if __name__ == '__main__':
    download()
    
    geojson = {
        'type': 'FeatureCollection',
        'features': get_unique_features()
    }
    
    with open('powerlines.geojson', 'w') as f:
        json.dump(geojson, f)
    